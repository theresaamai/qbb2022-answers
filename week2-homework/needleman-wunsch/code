#!/usr/bin/env python3

import numpy as np
import sys
from fasta import readFASTA

dna_score = sys.argv[1]
gap_penalty=float(sys.argv[2])
fasta_file = sys.argv[3]
filepath = sys.argv[4]

input_sequences = readFASTA(open(fasta_file))

seq1_id, sequence1 = input_sequences[0]
seq2_id, sequence2 = input_sequences[1]

dic = {}
hox = np.loadtxt(open(dna_score), object, skiprows=1)


letters =np.array(hox[:,0])
score = np.array(hox[:,1:]).astype(int)


for i,letter in enumerate(letters):
    dic[letter] = i


F_matrix = np.zeros((len(sequence1)+1, len(sequence2) +1))
T_matrix = np.zeros((len(sequence1)+1, len(sequence2) +1))
for i in range(len(sequence1)+1):
    F_matrix[i,0] = i*gap_penalty

for j in range(len(sequence2)+1):
    F_matrix[0,j] = j*gap_penalty

for i in range(1, len(sequence1)+1): # loop through rows
    for j in range(1, len(sequence2)+1): # loop through columns
        row = dic[sequence1[i-1]]
        col = dic[sequence2[j-1]]
        match_score = score[row,col]
        d = F_matrix[i-1, j-1] + match_score
        h = F_matrix[i,j-1] + gap_penalty
        v = F_matrix[i-1,j] + gap_penalty

        F_matrix[i,j] = max(d,h,v)
        if F_matrix[i,j] == d:
            T_matrix[i,j] = 0
        elif F_matrix[i,j] == h:
            T_matrix[i,j] = 1
        else:
            T_matrix[i,j] = 2
seq1 = ""
seq2 = ""
i = len(sequence1)
j = len(sequence2)

while((i!=0) and (j!=0)):
    direction = T_matrix[i,j]
    if direction == 0:
        seq1nuc = sequence1[i-1]
        seq2nuc = sequence2[j-1]
        seq1 = seq1nuc + seq1
        seq2 = seq2nuc + seq2
        i = i-1
        j = j-1
    elif direction == 1:
        seq1nuc = "-"
        seq2nuc = sequence2[j-1]
        seq1 = seq1nuc + seq1
        seq2 = seq2nuc + seq2
        j = j-1
    else:
        seq1nuc = sequence1[i-1]
        seq2nuc = "-"
        seq1 = seq1nuc + seq1
        seq2 = seq2nuc + seq2
        i = i-1

f = open(filepath, "w")
f.write(seq1)
f.write("\n")
f.write(seq2)
# f.close()

# print(seq1.count('-')) #to print the number of gaps
# print(seq2.count('-')) #to print the number of gaps
# print(F_matrix[len(sequence1), len(sequence2)]) #to print the alignment score

# python code HOXD70.txt -300 CTCF_38_M27_DNA.fna DNA_alignment

